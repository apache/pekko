# SPDX-License-Identifier: Apache-2.0

project-info {
  version: "current"
  scaladoc: "https://pekko.apache.org/api/pekko/"${project-info.version}"/org/apache/pekko/"
  javadoc: "https://pekko.apache.org/japi/pekko/"${project-info.version}"/org/apache/pekko/"
  shared-info {
    jdk-versions: ["OpenJDK 17", "OpenJDK 21"]
    snapshots: {
      url: "https://pekko.apache.org/docs/pekko/current/project/links.html#snapshots-repository"
      text: "Snapshots are available"
      new-tab: false
    }
    issues: {
      url: "https://github.com/apache/pekko/issues"
      text: "Github issues"
    }
    release-notes: {
      url: "https://pekko.apache.org/docs/pekko/current/release-notes/index.html"
      text: "Release Notes"
    }
    forums: [
      {
        text: "Apache Pekko User mailing list"
        url: "https://lists.apache.org/list.html?users@pekko.apache.org"
      }
      {
        text: "Apache Pekko Dev mailing list"
        url: "https://lists.apache.org/list.html?dev@pekko.apache.org"
      }
      {
        text: "apache/pekko discussion"
        url: "https://github.com/apache/pekko/discussions"
      }
    ]
  }
  actor: ${project-info.shared-info} {
    title: "Pekko Actors (classic)"
    jpms-name: "pekko.actor"
    api-docs: [
      {
        url: ${project-info.scaladoc}"actor/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"actor/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  actor-testkit-typed: ${project-info.shared-info} {
    title: "Pekko Actor Testkit (typed)"
    jpms-name: "pekko.actor.testkit.typed"
    api-docs: [
      {
        url: ${project-info.scaladoc}"actor/testkit/typed/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"actor/testkit/typed/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  actor-typed: ${project-info.shared-info} {
    title: "Pekko Actors (typed)"
    jpms-name: "pekko.actor.typed"
    api-docs: [
      {
        url: ${project-info.scaladoc}"actor/typed/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"actor/typed/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster: ${project-info.shared-info} {
    title: "Pekko Cluster (classic)"
    jpms-name: "pekko.cluster"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster-metrics: ${project-info.shared-info} {
    title: "Pekko Cluster Metrics (classic)"
    jpms-name: "pekko.cluster.metrics"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/metrics/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/metrics/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster-sharding: ${project-info.shared-info} {
    title: "Pekko Cluster Sharding (classic)"
    jpms-name: "pekko.cluster.sharding"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/sharding/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/sharding/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster-sharding-typed: ${project-info.shared-info} {
    title: "Pekko Cluster Sharding (typed)"
    jpms-name: "pekko.cluster.sharding.typed"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/sharding/typed/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/sharding/typed/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster-tools: ${project-info.shared-info} {
    title: "Pekko Cluster Tools (classic)"
    jpms-name: "pekko.cluster.tools"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/tools/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/tools/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  cluster-typed: ${project-info.shared-info} {
    title: "Pekko Cluster (typed)"
    jpms-name: "pekko.cluster.typed"
    api-docs: [
      {
        url: ${project-info.scaladoc}"cluster/typed/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"cluster/typed/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  coordination: ${project-info.shared-info} {
    title: "Pekko Coordination"
    jpms-name: "pekko.coordination"
    api-docs: [
      {
        url: ${project-info.scaladoc}"coordination/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"coordination/lease/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  discovery: ${project-info.shared-info} {
    title: "Pekko Discovery"
    jpms-name: "pekko.discovery"
    api-docs: [
      {
        url: ${project-info.scaladoc}"discovery/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"discovery/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  distributed-data: ${project-info.shared-info} {
    title: "Pekko Distributed Data (classic)"
    jpms-name: "pekko.cluster.ddata"
    api-docs: [
      {
        url: ${project-info.scaladoc}"discovery/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"discovery/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  multi-node-testkit: ${project-info.shared-info} {
    title: "Pekko Multi-node Testkit"
    jpms-name: "pekko.remote.testkit"
    api-docs: [
      {
        url: ${project-info.scaladoc}"remote/testkit/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"remote/testkit/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  osgi: ${project-info.shared-info} {
    title: "Pekko OSGi"
    jpms-name: "pekko.osgi"
    api-docs: [
      {
        url: ${project-info.scaladoc}"osgi/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"osgi/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  persistence: ${project-info.shared-info} {
    title: "Pekko Persistence (classic)"
    jpms-name: "pekko.persistence"
    api-docs: [
      {
        url: ${project-info.scaladoc}"persistence/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"persistence/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  persistence-query: ${project-info.shared-info} {
    title: "Pekko Persistence Query"
    jpms-name: "pekko.persistence.query"
    api-docs: [
      {
        url: ${project-info.scaladoc}"persistence/query/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"persistence/query/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  persistence-typed: ${project-info.shared-info} {
    title: "Pekko Event Sourcing (typed)"
    jpms-name: "pekko.persistence.typed"
    api-docs: [
      {
        url: ${project-info.scaladoc}"persistence/typed/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"persistence/typed/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  persistence-testkit: ${project-info.shared-info} {
    title: "Pekko Persistence Testkit"
    jpms-name: "pekko.persistence.testkit"
    api-docs: [
      {
        url: ${project-info.scaladoc}"persistence/testkit/scaladsl/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"persistence/testkit/javadsl/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  remote: ${project-info.shared-info} {
    title: "Pekko Remoting"
    jpms-name: "pekko.remote"
    api-docs: [
      {
        url: ${project-info.scaladoc}"remote/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"remote/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  slf4j: ${project-info.shared-info} {
    title: "Pekko Logging (classic)"
    jpms-name: "pekko.slf4j"
    api-docs: [
      {
        url: ${project-info.scaladoc}"event/slf4j/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"event/slf4j/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  stream: ${project-info.shared-info} {
    title: "Pekko Streams"
    jpms-name: "pekko.stream"
    api-docs: [
      {
        url: ${project-info.scaladoc}"stream/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"stream/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  stream-testkit: ${project-info.shared-info} {
    title: "Pekko Stream Testkit"
    jpms-name: "pekko.stream.testkit"
    api-docs: [
      {
        url: ${project-info.scaladoc}"stream/testkit/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"stream/testkit/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  stream-typed: ${project-info.shared-info} {
    title: "Pekko Stream (typed)"
    jpms-name: "pekko.stream"
    api-docs: [
      {
        url: ${project-info.scaladoc}"stream/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"stream/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
  testkit: ${project-info.shared-info} {
    title: "Pekko Actor Testkit (classic)"
    jpms-name: "pekko.actor.testkit"
    api-docs: [
      {
        url: ${project-info.scaladoc}"testkit/index.html"
        text: "API (Scaladoc)"
      }
      {
        url: ${project-info.javadoc}"testkit/package-summary.html"
        text: "API (Javadoc)"
      }
    ]
  }
}
