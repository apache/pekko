/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * license agreements; and to You under the Apache License, version 2.0:
 *
 *   https://www.apache.org/licenses/LICENSE-2.0
 *
 * This file is part of the Apache Pekko project, which was derived from Akka.
 */

/*
 * Copyright (C) 2019-2022 Lightbend Inc. <https://www.lightbend.com>
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ClusterMessages.proto
// Protobuf Java Version: 4.32.0

package org.apache.pekko.cluster.typed.internal.protobuf;

@org.apache.pekko.protobufv3.internal.Generated
public final class ClusterMessages {
  private ClusterMessages() {}
  static {
    org.apache.pekko.protobufv3.internal.RuntimeVersion.validateProtobufGencodeVersion(
      org.apache.pekko.protobufv3.internal.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 32,
      /* patch= */ 0,
      /* suffix= */ "",
      ClusterMessages.class.getName());
  }
  public static void registerAllExtensions(
      org.apache.pekko.protobufv3.internal.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      org.apache.pekko.protobufv3.internal.ExtensionRegistry registry) {
    registerAllExtensions(
        (org.apache.pekko.protobufv3.internal.ExtensionRegistryLite) registry);
  }
  public interface ReceptionistEntryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.pekko.cluster.typed.ReceptionistEntry)
      org.apache.pekko.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required string actorRef = 1;</code>
     * @return Whether the actorRef field is set.
     */
    boolean hasActorRef();
    /**
     * <code>required string actorRef = 1;</code>
     * @return The actorRef.
     */
    java.lang.String getActorRef();
    /**
     * <code>required string actorRef = 1;</code>
     * @return The bytes for actorRef.
     */
    org.apache.pekko.protobufv3.internal.ByteString
        getActorRefBytes();

    /**
     * <code>required uint64 systemUid = 2;</code>
     * @return Whether the systemUid field is set.
     */
    boolean hasSystemUid();
    /**
     * <code>required uint64 systemUid = 2;</code>
     * @return The systemUid.
     */
    long getSystemUid();

    /**
     * <code>optional int64 createdTimestamp = 3;</code>
     * @return Whether the createdTimestamp field is set.
     */
    boolean hasCreatedTimestamp();
    /**
     * <code>optional int64 createdTimestamp = 3;</code>
     * @return The createdTimestamp.
     */
    long getCreatedTimestamp();
  }
  /**
   * Protobuf type {@code org.apache.pekko.cluster.typed.ReceptionistEntry}
   */
  public static final class ReceptionistEntry extends
      org.apache.pekko.protobufv3.internal.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.apache.pekko.cluster.typed.ReceptionistEntry)
      ReceptionistEntryOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      org.apache.pekko.protobufv3.internal.RuntimeVersion.validateProtobufGencodeVersion(
        org.apache.pekko.protobufv3.internal.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 32,
        /* patch= */ 0,
        /* suffix= */ "",
        ReceptionistEntry.class.getName());
    }
    // Use ReceptionistEntry.newBuilder() to construct.
    private ReceptionistEntry(org.apache.pekko.protobufv3.internal.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ReceptionistEntry() {
      actorRef_ = "";
    }

    public static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor;
    }

    @java.lang.Override
    protected org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.class, org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.Builder.class);
    }

    private int bitField0_;
    public static final int ACTORREF_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object actorRef_ = "";
    /**
     * <code>required string actorRef = 1;</code>
     * @return Whether the actorRef field is set.
     */
    @java.lang.Override
    public boolean hasActorRef() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string actorRef = 1;</code>
     * @return The actorRef.
     */
    @java.lang.Override
    public java.lang.String getActorRef() {
      java.lang.Object ref = actorRef_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        org.apache.pekko.protobufv3.internal.ByteString bs = 
            (org.apache.pekko.protobufv3.internal.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          actorRef_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string actorRef = 1;</code>
     * @return The bytes for actorRef.
     */
    @java.lang.Override
    public org.apache.pekko.protobufv3.internal.ByteString
        getActorRefBytes() {
      java.lang.Object ref = actorRef_;
      if (ref instanceof java.lang.String) {
        org.apache.pekko.protobufv3.internal.ByteString b = 
            org.apache.pekko.protobufv3.internal.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        actorRef_ = b;
        return b;
      } else {
        return (org.apache.pekko.protobufv3.internal.ByteString) ref;
      }
    }

    public static final int SYSTEMUID_FIELD_NUMBER = 2;
    private long systemUid_ = 0L;
    /**
     * <code>required uint64 systemUid = 2;</code>
     * @return Whether the systemUid field is set.
     */
    @java.lang.Override
    public boolean hasSystemUid() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required uint64 systemUid = 2;</code>
     * @return The systemUid.
     */
    @java.lang.Override
    public long getSystemUid() {
      return systemUid_;
    }

    public static final int CREATEDTIMESTAMP_FIELD_NUMBER = 3;
    private long createdTimestamp_ = 0L;
    /**
     * <code>optional int64 createdTimestamp = 3;</code>
     * @return Whether the createdTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasCreatedTimestamp() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int64 createdTimestamp = 3;</code>
     * @return The createdTimestamp.
     */
    @java.lang.Override
    public long getCreatedTimestamp() {
      return createdTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasActorRef()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSystemUid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(org.apache.pekko.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        org.apache.pekko.protobufv3.internal.GeneratedMessage.writeString(output, 1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, systemUid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt64(3, createdTimestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += org.apache.pekko.protobufv3.internal.GeneratedMessage.computeStringSize(1, actorRef_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += org.apache.pekko.protobufv3.internal.CodedOutputStream
          .computeUInt64Size(2, systemUid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += org.apache.pekko.protobufv3.internal.CodedOutputStream
          .computeInt64Size(3, createdTimestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry)) {
        return super.equals(obj);
      }
      org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry other = (org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry) obj;

      if (hasActorRef() != other.hasActorRef()) return false;
      if (hasActorRef()) {
        if (!getActorRef()
            .equals(other.getActorRef())) return false;
      }
      if (hasSystemUid() != other.hasSystemUid()) return false;
      if (hasSystemUid()) {
        if (getSystemUid()
            != other.getSystemUid()) return false;
      }
      if (hasCreatedTimestamp() != other.hasCreatedTimestamp()) return false;
      if (hasCreatedTimestamp()) {
        if (getCreatedTimestamp()
            != other.getCreatedTimestamp()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasActorRef()) {
        hash = (37 * hash) + ACTORREF_FIELD_NUMBER;
        hash = (53 * hash) + getActorRef().hashCode();
      }
      if (hasSystemUid()) {
        hash = (37 * hash) + SYSTEMUID_FIELD_NUMBER;
        hash = (53 * hash) + org.apache.pekko.protobufv3.internal.Internal.hashLong(
            getSystemUid());
      }
      if (hasCreatedTimestamp()) {
        hash = (37 * hash) + CREATEDTIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + org.apache.pekko.protobufv3.internal.Internal.hashLong(
            getCreatedTimestamp());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        java.nio.ByteBuffer data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        org.apache.pekko.protobufv3.internal.ByteString data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        org.apache.pekko.protobufv3.internal.ByteString data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(byte[] data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        byte[] data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        java.io.InputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        org.apache.pekko.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry parseFrom(
        org.apache.pekko.protobufv3.internal.CodedInputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.apache.pekko.protobufv3.internal.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.pekko.cluster.typed.ReceptionistEntry}
     */
    public static final class Builder extends
        org.apache.pekko.protobufv3.internal.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.pekko.cluster.typed.ReceptionistEntry)
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntryOrBuilder {
      public static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor;
      }

      @java.lang.Override
      protected org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.class, org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.Builder.class);
      }

      // Construct using org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.newBuilder()
      private Builder() {

      }

      private Builder(
          org.apache.pekko.protobufv3.internal.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        actorRef_ = "";
        systemUid_ = 0L;
        createdTimestamp_ = 0L;
        return this;
      }

      @java.lang.Override
      public org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor;
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry getDefaultInstanceForType() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry build() {
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry buildPartial() {
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry result = new org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.actorRef_ = actorRef_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.systemUid_ = systemUid_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.createdTimestamp_ = createdTimestamp_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(org.apache.pekko.protobufv3.internal.Message other) {
        if (other instanceof org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry) {
          return mergeFrom((org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry other) {
        if (other == org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry.getDefaultInstance()) return this;
        if (other.hasActorRef()) {
          actorRef_ = other.actorRef_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasSystemUid()) {
          setSystemUid(other.getSystemUid());
        }
        if (other.hasCreatedTimestamp()) {
          setCreatedTimestamp(other.getCreatedTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasActorRef()) {
          return false;
        }
        if (!hasSystemUid()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          org.apache.pekko.protobufv3.internal.CodedInputStream input,
          org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                actorRef_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                systemUid_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                createdTimestamp_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object actorRef_ = "";
      /**
       * <code>required string actorRef = 1;</code>
       * @return Whether the actorRef field is set.
       */
      public boolean hasActorRef() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string actorRef = 1;</code>
       * @return The actorRef.
       */
      public java.lang.String getActorRef() {
        java.lang.Object ref = actorRef_;
        if (!(ref instanceof java.lang.String)) {
          org.apache.pekko.protobufv3.internal.ByteString bs =
              (org.apache.pekko.protobufv3.internal.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            actorRef_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string actorRef = 1;</code>
       * @return The bytes for actorRef.
       */
      public org.apache.pekko.protobufv3.internal.ByteString
          getActorRefBytes() {
        java.lang.Object ref = actorRef_;
        if (ref instanceof String) {
          org.apache.pekko.protobufv3.internal.ByteString b = 
              org.apache.pekko.protobufv3.internal.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          actorRef_ = b;
          return b;
        } else {
          return (org.apache.pekko.protobufv3.internal.ByteString) ref;
        }
      }
      /**
       * <code>required string actorRef = 1;</code>
       * @param value The actorRef to set.
       * @return This builder for chaining.
       */
      public Builder setActorRef(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        actorRef_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required string actorRef = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearActorRef() {
        actorRef_ = getDefaultInstance().getActorRef();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>required string actorRef = 1;</code>
       * @param value The bytes for actorRef to set.
       * @return This builder for chaining.
       */
      public Builder setActorRefBytes(
          org.apache.pekko.protobufv3.internal.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        actorRef_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private long systemUid_ ;
      /**
       * <code>required uint64 systemUid = 2;</code>
       * @return Whether the systemUid field is set.
       */
      @java.lang.Override
      public boolean hasSystemUid() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required uint64 systemUid = 2;</code>
       * @return The systemUid.
       */
      @java.lang.Override
      public long getSystemUid() {
        return systemUid_;
      }
      /**
       * <code>required uint64 systemUid = 2;</code>
       * @param value The systemUid to set.
       * @return This builder for chaining.
       */
      public Builder setSystemUid(long value) {

        systemUid_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 systemUid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemUid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        systemUid_ = 0L;
        onChanged();
        return this;
      }

      private long createdTimestamp_ ;
      /**
       * <code>optional int64 createdTimestamp = 3;</code>
       * @return Whether the createdTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasCreatedTimestamp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int64 createdTimestamp = 3;</code>
       * @return The createdTimestamp.
       */
      @java.lang.Override
      public long getCreatedTimestamp() {
        return createdTimestamp_;
      }
      /**
       * <code>optional int64 createdTimestamp = 3;</code>
       * @param value The createdTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setCreatedTimestamp(long value) {

        createdTimestamp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 createdTimestamp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreatedTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        createdTimestamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.pekko.cluster.typed.ReceptionistEntry)
    }

    // @@protoc_insertion_point(class_scope:org.apache.pekko.cluster.typed.ReceptionistEntry)
    private static final org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry();
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.pekko.protobufv3.internal.Parser<ReceptionistEntry>
        PARSER = new org.apache.pekko.protobufv3.internal.AbstractParser<ReceptionistEntry>() {
      @java.lang.Override
      public ReceptionistEntry parsePartialFrom(
          org.apache.pekko.protobufv3.internal.CodedInputStream input,
          org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (org.apache.pekko.protobufv3.internal.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static org.apache.pekko.protobufv3.internal.Parser<ReceptionistEntry> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.pekko.protobufv3.internal.Parser<ReceptionistEntry> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.ReceptionistEntry getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PubSubMessagePublishedOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.apache.pekko.cluster.typed.PubSubMessagePublished)
      org.apache.pekko.protobufv3.internal.MessageOrBuilder {

    /**
     * <code>required .Payload message = 1;</code>
     * @return Whether the message field is set.
     */
    boolean hasMessage();
    /**
     * <code>required .Payload message = 1;</code>
     * @return The message.
     */
    org.apache.pekko.remote.ContainerFormats.Payload getMessage();
    /**
     * <code>required .Payload message = 1;</code>
     */
    org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder getMessageOrBuilder();
  }
  /**
   * Protobuf type {@code org.apache.pekko.cluster.typed.PubSubMessagePublished}
   */
  public static final class PubSubMessagePublished extends
      org.apache.pekko.protobufv3.internal.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.apache.pekko.cluster.typed.PubSubMessagePublished)
      PubSubMessagePublishedOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      org.apache.pekko.protobufv3.internal.RuntimeVersion.validateProtobufGencodeVersion(
        org.apache.pekko.protobufv3.internal.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 32,
        /* patch= */ 0,
        /* suffix= */ "",
        PubSubMessagePublished.class.getName());
    }
    // Use PubSubMessagePublished.newBuilder() to construct.
    private PubSubMessagePublished(org.apache.pekko.protobufv3.internal.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PubSubMessagePublished() {
    }

    public static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor;
    }

    @java.lang.Override
    protected org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.class, org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.Builder.class);
    }

    private int bitField0_;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private org.apache.pekko.remote.ContainerFormats.Payload message_;
    /**
     * <code>required .Payload message = 1;</code>
     * @return Whether the message field is set.
     */
    @java.lang.Override
    public boolean hasMessage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .Payload message = 1;</code>
     * @return The message.
     */
    @java.lang.Override
    public org.apache.pekko.remote.ContainerFormats.Payload getMessage() {
      return message_ == null ? org.apache.pekko.remote.ContainerFormats.Payload.getDefaultInstance() : message_;
    }
    /**
     * <code>required .Payload message = 1;</code>
     */
    @java.lang.Override
    public org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder getMessageOrBuilder() {
      return message_ == null ? org.apache.pekko.remote.ContainerFormats.Payload.getDefaultInstance() : message_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getMessage().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(org.apache.pekko.protobufv3.internal.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getMessage());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += org.apache.pekko.protobufv3.internal.CodedOutputStream
          .computeMessageSize(1, getMessage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished)) {
        return super.equals(obj);
      }
      org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished other = (org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished) obj;

      if (hasMessage() != other.hasMessage()) return false;
      if (hasMessage()) {
        if (!getMessage()
            .equals(other.getMessage())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessage()) {
        hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getMessage().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        java.nio.ByteBuffer data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        java.nio.ByteBuffer data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        org.apache.pekko.protobufv3.internal.ByteString data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        org.apache.pekko.protobufv3.internal.ByteString data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(byte[] data)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        byte[] data,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        java.io.InputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseDelimitedFrom(
        java.io.InputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        org.apache.pekko.protobufv3.internal.CodedInputStream input)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished parseFrom(
        org.apache.pekko.protobufv3.internal.CodedInputStream input,
        org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return org.apache.pekko.protobufv3.internal.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        org.apache.pekko.protobufv3.internal.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.apache.pekko.cluster.typed.PubSubMessagePublished}
     */
    public static final class Builder extends
        org.apache.pekko.protobufv3.internal.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.apache.pekko.cluster.typed.PubSubMessagePublished)
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublishedOrBuilder {
      public static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor;
      }

      @java.lang.Override
      protected org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.class, org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.Builder.class);
      }

      // Construct using org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          org.apache.pekko.protobufv3.internal.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (org.apache.pekko.protobufv3.internal.GeneratedMessage
                .alwaysUseFieldBuilders) {
          internalGetMessageFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor;
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished getDefaultInstanceForType() {
        return org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.getDefaultInstance();
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished build() {
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished buildPartial() {
        org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished result = new org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.message_ = messageBuilder_ == null
              ? message_
              : messageBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(org.apache.pekko.protobufv3.internal.Message other) {
        if (other instanceof org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished) {
          return mergeFrom((org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished other) {
        if (other == org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished.getDefaultInstance()) return this;
        if (other.hasMessage()) {
          mergeMessage(other.getMessage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasMessage()) {
          return false;
        }
        if (!getMessage().isInitialized()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          org.apache.pekko.protobufv3.internal.CodedInputStream input,
          org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    internalGetMessageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private org.apache.pekko.remote.ContainerFormats.Payload message_;
      private org.apache.pekko.protobufv3.internal.SingleFieldBuilder<
          org.apache.pekko.remote.ContainerFormats.Payload, org.apache.pekko.remote.ContainerFormats.Payload.Builder, org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder> messageBuilder_;
      /**
       * <code>required .Payload message = 1;</code>
       * @return Whether the message field is set.
       */
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .Payload message = 1;</code>
       * @return The message.
       */
      public org.apache.pekko.remote.ContainerFormats.Payload getMessage() {
        if (messageBuilder_ == null) {
          return message_ == null ? org.apache.pekko.remote.ContainerFormats.Payload.getDefaultInstance() : message_;
        } else {
          return messageBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public Builder setMessage(org.apache.pekko.remote.ContainerFormats.Payload value) {
        if (messageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
        } else {
          messageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public Builder setMessage(
          org.apache.pekko.remote.ContainerFormats.Payload.Builder builderForValue) {
        if (messageBuilder_ == null) {
          message_ = builderForValue.build();
        } else {
          messageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public Builder mergeMessage(org.apache.pekko.remote.ContainerFormats.Payload value) {
        if (messageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            message_ != null &&
            message_ != org.apache.pekko.remote.ContainerFormats.Payload.getDefaultInstance()) {
            getMessageBuilder().mergeFrom(value);
          } else {
            message_ = value;
          }
        } else {
          messageBuilder_.mergeFrom(value);
        }
        if (message_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public Builder clearMessage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        message_ = null;
        if (messageBuilder_ != null) {
          messageBuilder_.dispose();
          messageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public org.apache.pekko.remote.ContainerFormats.Payload.Builder getMessageBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return internalGetMessageFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      public org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder getMessageOrBuilder() {
        if (messageBuilder_ != null) {
          return messageBuilder_.getMessageOrBuilder();
        } else {
          return message_ == null ?
              org.apache.pekko.remote.ContainerFormats.Payload.getDefaultInstance() : message_;
        }
      }
      /**
       * <code>required .Payload message = 1;</code>
       */
      private org.apache.pekko.protobufv3.internal.SingleFieldBuilder<
          org.apache.pekko.remote.ContainerFormats.Payload, org.apache.pekko.remote.ContainerFormats.Payload.Builder, org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder> 
          internalGetMessageFieldBuilder() {
        if (messageBuilder_ == null) {
          messageBuilder_ = new org.apache.pekko.protobufv3.internal.SingleFieldBuilder<
              org.apache.pekko.remote.ContainerFormats.Payload, org.apache.pekko.remote.ContainerFormats.Payload.Builder, org.apache.pekko.remote.ContainerFormats.PayloadOrBuilder>(
                  getMessage(),
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        return messageBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.apache.pekko.cluster.typed.PubSubMessagePublished)
    }

    // @@protoc_insertion_point(class_scope:org.apache.pekko.cluster.typed.PubSubMessagePublished)
    private static final org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished();
    }

    public static org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final org.apache.pekko.protobufv3.internal.Parser<PubSubMessagePublished>
        PARSER = new org.apache.pekko.protobufv3.internal.AbstractParser<PubSubMessagePublished>() {
      @java.lang.Override
      public PubSubMessagePublished parsePartialFrom(
          org.apache.pekko.protobufv3.internal.CodedInputStream input,
          org.apache.pekko.protobufv3.internal.ExtensionRegistryLite extensionRegistry)
          throws org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (org.apache.pekko.protobufv3.internal.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new org.apache.pekko.protobufv3.internal.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static org.apache.pekko.protobufv3.internal.Parser<PubSubMessagePublished> parser() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.pekko.protobufv3.internal.Parser<PubSubMessagePublished> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public org.apache.pekko.cluster.typed.internal.protobuf.ClusterMessages.PubSubMessagePublished getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
    internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor;
  private static final 
    org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_fieldAccessorTable;
  private static final org.apache.pekko.protobufv3.internal.Descriptors.Descriptor
    internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor;
  private static final 
    org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable
      internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_fieldAccessorTable;

  public static org.apache.pekko.protobufv3.internal.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  org.apache.pekko.protobufv3.internal.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025ClusterMessages.proto\022\036org.apache.pekk" +
      "o.cluster.typed\032\026ContainerFormats.proto\"" +
      "R\n\021ReceptionistEntry\022\020\n\010actorRef\030\001 \002(\t\022\021" +
      "\n\tsystemUid\030\002 \002(\004\022\030\n\020createdTimestamp\030\003 " +
      "\001(\003\"3\n\026PubSubMessagePublished\022\031\n\007message" +
      "\030\001 \002(\0132\010.PayloadB4\n0org.apache.pekko.clu" +
      "ster.typed.internal.protobufH\001"
    };
    descriptor = org.apache.pekko.protobufv3.internal.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new org.apache.pekko.protobufv3.internal.Descriptors.FileDescriptor[] {
          org.apache.pekko.remote.ContainerFormats.getDescriptor(),
        });
    internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_fieldAccessorTable = new
      org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable(
        internal_static_org_apache_pekko_cluster_typed_ReceptionistEntry_descriptor,
        new java.lang.String[] { "ActorRef", "SystemUid", "CreatedTimestamp", });
    internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_fieldAccessorTable = new
      org.apache.pekko.protobufv3.internal.GeneratedMessage.FieldAccessorTable(
        internal_static_org_apache_pekko_cluster_typed_PubSubMessagePublished_descriptor,
        new java.lang.String[] { "Message", });
    descriptor.resolveAllFeaturesImmutable();
    org.apache.pekko.remote.ContainerFormats.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
